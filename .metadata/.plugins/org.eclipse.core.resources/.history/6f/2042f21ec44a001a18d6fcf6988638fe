package chat.server;


import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.sql.SQLException;

import SenderAndReceiver.ConsumerInfo;
import SenderAndReceiver.MainMenu;
import SenderAndReceiver.Packet;



public class Server implements MainMenu {
	public static void main(String[] args) throws SQLException {
		ServerSocket serverSocket = null;
		Socket socket = null;
		ConsumerInfo info = null;
		ServConsumerManage con = null;
		ObjectOutputStream out = null;
		ObjectInputStream in = null;
		Packet packet = new Packet();
		
	try {
		serverSocket = new ServerSocket(9001);
		System.out.println("클라이언트의 접속을 대기중입니다.");
		socket = serverSocket.accept();
		System.out.println("클라이언트 접속에 성공했습니다.");
		con = new ServConsumerManage(in, out);
		
		if(con.connection()) {
			
			while (true) {
				out = new ObjectOutputStream(socket.getOutputStream());
				in = new ObjectInputStream(socket.getInputStream());
				
				packet = (Packet)in.readObject();
				System.out.println("num : " + (String)packet.getArray()[NUMBER]);
				
				if ((int)packet.getArray()[MENU]== SIGNUP) {con.signUp(packet);
				} else if ((int)packet.getArray()[MENU] == REVISION) {con.selection(packet);
				//} else if (n == POINT_REFER) {manage_point(POINT_LOOKUP_NUM, con);
				//} else if (n == POINT_MODIFY) {manage_point(POINT_MODIFY_NUM, con);
				//} else if (n == REMOVE_INFO) {manage_point(REMOVE_INFO_NUM, con);
				} else if ((int)packet.getArray()[MENU] == TOTAL_ACCOUNT) {con.showList(packet);
				//} else if (n == STATISTIC_FUNC) {con.statistic();
				//} else if (n == DELETE_ALL) {con.deleteAll();
				//} else if (n == QUIT_PROGRAM ) {con.quit();return;}
			}
				System.out.println(packet.getError());
				out.writeObject(packet);
				out.flush();
		}	
		}
		socket.close();
		in.close();
		out.close();
		
	}
	catch(SocketException e) {
		System.out.println("여기 걸림1");
		System.out.println(e.getMessage());
	} catch (IOException e) {
		e.printStackTrace();
	}
	 catch (ClassNotFoundException e) {
	e.printStackTrace();
}System.exit(0);
	
}
}
